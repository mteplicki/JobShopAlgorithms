var documenterSearchIndex = {"docs":
[{"location":"plotters/#Plotters","page":"Plotters","title":"Plotters","text":"","category":"section"},{"location":"plotters/","page":"Plotters","title":"Plotters","text":"The Plotters module provides functions to plot the results of the algorithms.","category":"page"},{"location":"plotters/#Plotting-the-results-of-an-algorithm","page":"Plotters","title":"Plotting the results of an algorithm","text":"","category":"section"},{"location":"plotters/","page":"Plotters","title":"Plotters","text":"The gantt_chart function can be used to plot the gantt chart of an algorithm. It takes as input the algorithm results and the instance. The algorithm results can be obtained by via proper function from module Algortihms.","category":"page"},{"location":"plotters/","page":"Plotters","title":"Plotters","text":"gantt_chart","category":"page"},{"location":"plotters/#ShopAlgorithms.Plotters.gantt_chart","page":"Plotters","title":"ShopAlgorithms.Plotters.gantt_chart","text":"gantt_chart(solution::ShopSchedule)\n\nCreate a Gantt chart for a given ShopSchedule solution.\n\nArguments\n\nsolution::ShopSchedule: A ShopSchedule object representing a solution to a job shop scheduling problem.\n\nReturns\n\nA plot of the solution using a Gantt chart.\n\n\n\n\n\n","category":"function"},{"location":"plotters/","page":"Plotters","title":"Plotters","text":"The plot_geometric_approach function can be used to plot the geometric approach of an two jobs problem.","category":"page"},{"location":"plotters/","page":"Plotters","title":"Plotters","text":"plot_geometric_approach","category":"page"},{"location":"plotters/#ShopAlgorithms.Plotters.plot_geometric_approach","page":"Plotters","title":"ShopAlgorithms.Plotters.plot_geometric_approach","text":"plot_geometric_approach(solution::ShopSchedule; title::Union{Nothing,String}=nothing, width=800, height=800, aspectmode=\"auto\")\n\nThis function takes a ShopSchedule object as input and returns a plot of the solution using a geometric approach, when n == 2.  Plot is generated using PlotlyJS.\n\nArguments\n\nsolution::ShopSchedule: A ShopSchedule object representing the solution to a job shop scheduling problem.\ntitle::Union{Nothing,String}=nothing: Title of the plot. If nothing, the title will be the name of the instance.\nwidth=800: Width of the plot.\nheight=800: Height of the plot.\naspectmode=\"auto\": Aspect mode of the plot.\n\nReturns\n\nA plot of the solution using a geometric approach.\n\nExamples\n\njulia> instance = random_instance_generator(2,5);\njulia> solution = two_jobs_job_shop(instance);\njulia> plot_geometric_approach(solution)\n\n\n\n\n\n","category":"function"},{"location":"#ShopAlgorithms-documentation","page":"Home","title":"ShopAlgorithms documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Main documentation for ShopAlgorithms.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"ShopAlgorithms\nShopAlgorithms.Algorithms\nShopAlgorithms.ShopInstances\nShopAlgorithms.InstanceLoaders\nShopAlgorithms.Plotters\nShopAlgorithms.Constraints\nShopAlgorithms.ShopGraphs","category":"page"},{"location":"#ShopAlgorithms","page":"Home","title":"ShopAlgorithms","text":"This module contains the implementation of algorithms for solving job shop scheduling problems. It exports the following modules: Algorithms, ShopInstances, InstanceLoaders, Plotters, Constraints, ShopGraphs.\n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.Algorithms","page":"Home","title":"ShopAlgorithms.Algorithms","text":"Module containing various Job Shop algorithms.\n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.ShopInstances","page":"Home","title":"ShopAlgorithms.ShopInstances","text":"This module contains the implementation of various job shop instances, as well as the necessary functions and types to work with them. \n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.InstanceLoaders","page":"Home","title":"ShopAlgorithms.InstanceLoaders","text":"Module for loading and generating random instances of the Shop Problem.\n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.Plotters","page":"Home","title":"ShopAlgorithms.Plotters","text":"Module for plotting functions and data.\n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.Constraints","page":"Home","title":"ShopAlgorithms.Constraints","text":"This module contains functions that define constraints for the job shop scheduling problem. Every method in a module should return a function that takes an instance of the problem and returns a boolean value.\n\n\n\n\n\n","category":"module"},{"location":"#ShopAlgorithms.ShopGraphs","page":"Home","title":"ShopAlgorithms.ShopGraphs","text":"This module defines functions and types for working with graphs dedicated for Job Shop algortihms.\n\n\n\n\n\n","category":"module"}]
}
