import ShopAlgorithms.Algorithms.test_feasibility as test_feasibility

function DPCTest()
@testset "DPCTest" verbose=true begin
    @testset "DPCTest1" verbose=true begin
        r = [0, 2, 5, 8, 10, 15]
        p = [4, 4, 2, 1, 3, 2]
        q = [9, 10, 13, 6, 7, 6]
        delay = [0 for _ in 1:6, _ in 1:6]
        delay[3,5] = 5
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 23
    end

    @testset "DPCTest2" verbose=true begin
        r = [3,0]
        p = [1,1]
        q = [0,3]
        delay = [0 0; 0 0]
        delay[2,1] = 3
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test CMax == 4
    end

    @testset "DPCTest3" verbose=true begin
        r = [614, 594, 460, 612, 309, 442, 583, 287, 317, 615]
        p = [11, 46, 10, 43, 61, 52, 21, 74, 51, 47]
        q = [290, 142, 414, 0, 429, 358, 293, 451, 538, 212]
        delay = [typemin(Int) for _ in 1:10, _ in 1:10]
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 932
    end

    @testset "DPCTest4" verbose=true begin
        r = [35, 54, 5, 39, 57, 11]
        p = [7, 4, 4, 3, 1, 3]
        q = [9, 0, 51, 18, 0, 33]
        delay = [0 for _ in 1:6, _ in 1:6]
        delay[3,1] = 30
        delay[3,2] = 49
        delay[6,2] = 32
        delay[3,4] = 34
        delay[3,5] = 52
        delay[6,5] = 35
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 60
    end

    @testset "DPCTest4" verbose=true begin
        r = [35, 54, 5, 39, 57, 11]
        p = [7, 4, 4, 3, 1, 3]
        q = [9, 0, 51, 18, 0, 33]
        delay = [0 for _ in 1:6, _ in 1:6]
        delay[3,1] = 30
        delay[3,2] = 49
        delay[6,2] = 32
        delay[3,4] = 34
        delay[3,5] = 52
        delay[6,5] = 35
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 60
    end

    @testset "DPCTest5" verbose=true begin
        p = [9, 90, 74, 95, 14, 84, 13, 31, 85, 61]
        q = [386, 417, 376, 730, 736, 560, 346, 822, 416, 381]
        r = [520, 375, 371, 81, 0, 0, 502, 0, 368, 455]
        delay = [0 for _ in 1:10, _ in 1:10]
        delay[:,1] = [0, -9223372036854775288, -9223372036854775288, 401, 326, 249, -9223372036854775288, 429, -9223372036854775288, -9223372036854775288]
        delay[:,2] = [-9223372036854775433, 0, -9223372036854775433, 294, 219, -9223372036854775433, -9223372036854775433, 322, -9223372036854775433, -9223372036854775433]
        delay[:,3] = [-9223372036854775437, -9223372036854775437, 0, 290, 215, -9223372036854775437, -9223372036854775437, 318, -9223372036854775437, -9223372036854775437]
        delay[:,4] = [-9223372036854775727, -9223372036854775727, -9223372036854775727, 0, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727]
        delay[:,5] = [-9223372036854775727, -9223372036854775727, -9223372036854775727, 0, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727, -9223372036854775727]
        delay[:,6] = [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, 0, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808]
        delay[:,7] = [-9223372036854775306, -9223372036854775306, -9223372036854775306, 421, 346, -9223372036854775306, 0, 449, -9223372036854775306, -9223372036854775306]
        delay[:,8] = [-9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, 0, -9223372036854775808, -9223372036854775808]
        delay[:,9] = [-9223372036854775440, -9223372036854775440, -9223372036854775440, -9223372036854775440, -9223372036854775440, -9223372036854775440, -9223372036854775440, -9223372036854775440, 0, -9223372036854775440]
        delay[:,10] = [-9223372036854775353, -9223372036854775353, -9223372036854775353, 373, 298, 184, -9223372036854775353, 401, -9223372036854775353, 0]        
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 1063
    end

    @testset "DPCTest6" verbose=true begin
        p = [11, 46, 10, 43, 61, 52, 21, 74, 51, 47]
        r = [614, 681, 697, 707, 172, 311, 648, 218, 226, 683]
        q = [331, 176, 188, 0, 586, 546, 269, 590, 672, 187]
        delay = [0 for _ in 1:10, _ in 1:10]
        delay[:,1] = [0, -9223372036854775194, -9223372036854775194, -9223372036854775194, -9223372036854775194, -9223372036854775194, -9223372036854775194, -9223372036854775194, 381, -9223372036854775194]
        delay[:,2] = [-9223372036854775127, 0, -9223372036854775127, -9223372036854775127, -9223372036854775127, -9223372036854775127, -9223372036854775127, -9223372036854775127, 455, -9223372036854775127]
        delay[:,3] = [-9223372036854775111, -9223372036854775111, 0, -9223372036854775111, 398, 349, -9223372036854775111, 415, 460, -9223372036854775111]
        delay[:,4] = [-9223372036854775101, -9223372036854775101, -9223372036854775101, 0, -9223372036854775101, -9223372036854775101, -9223372036854775101, -9223372036854775101, 481, -9223372036854775101]
        delay[:,5] = [-9223372036854775636, -9223372036854775636, -9223372036854775636, -9223372036854775636, 0, -9223372036854775636, -9223372036854775636, -9223372036854775636, -9223372036854775636, -9223372036854775636]
        delay[:,6] = [-9223372036854775497, -9223372036854775497, -9223372036854775497, -9223372036854775497, -9223372036854775497, 0, -9223372036854775497, -9223372036854775497, -9223372036854775497, -9223372036854775497]
        delay[:,7] = [-9223372036854775160, -9223372036854775160, -9223372036854775160, -9223372036854775160, -9223372036854775160, -9223372036854775160, 0, -9223372036854775160, 415, -9223372036854775160]
        delay[:,8] = [-9223372036854775590, -9223372036854775590, -9223372036854775590, -9223372036854775590, -9223372036854775590, -9223372036854775590, -9223372036854775590, 0, -9223372036854775590, -9223372036854775590]
        delay[:,9] = [-9223372036854775582, -9223372036854775582, -9223372036854775582, -9223372036854775582, -9223372036854775582, -9223372036854775582, -9223372036854775582, -9223372036854775582, 0, -9223372036854775582]
        delay[:,10] = [-9223372036854775125, -9223372036854775125, -9223372036854775125, -9223372036854775125, 384, 335, -9223372036854775125, 401, 434, 0]
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test test_feasibility(p, r, q, delay)
        @test CMax == 972
    end

    @testset "DPCTest6" verbose=true begin
        p = [15, 11, 14, 9, 12, 9, 10]
        r = [0, 44, 15, 7, 15, 33, 12]
        q = [40, 0, 26, 25, 22, 7, 31]
        delay = [0 44 -9223372036854775793 -9223372036854775801 -9223372036854775793 -9223372036854775775 -9223372036854775796; -9223372036854775808 0 -9223372036854775793 -9223372036854775801 -9223372036854775793 -9223372036854775775 -9223372036854775796; -9223372036854775808 -9223372036854775764 0 -9223372036854775801 -9223372036854775793 -9223372036854775775 -9223372036854775796; -9223372036854775808 -9223372036854775764 -9223372036854775793 0 -9223372036854775793 -9223372036854775775 -9223372036854775796; -9223372036854775808 -9223372036854775764 -9223372036854775793 -9223372036854775801 0 18 -9223372036854775796; -9223372036854775808 -9223372036854775764 -9223372036854775793 -9223372036854775801 -9223372036854775793 0 -9223372036854775796; -9223372036854775808 -9223372036854775764 -9223372036854775793 -9223372036854775801 -9223372036854775793 -9223372036854775775 0]
        CMax, _ = Algorithms.carlier_dpc(p, r, q, delay, nothing)
        @test CMax == 85
    end
end
end
